<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sifang.insurance.underwriting.mapper.UnderwritingMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.sifang.insurance.underwriting.entity.Underwriting">
        <id column="id" property="id"/>
        <result column="order_no" property="orderNo"/>
        <result column="user_id" property="userId"/>
        <result column="product_id" property="productId"/>
        <result column="status" property="status"/>
        <result column="conclusion" property="conclusion"/>
        <result column="reject_reason" property="rejectReason"/>
        <result column="underwriter" property="underwriter"/>
        <result column="underwriting_time" property="underwritingTime"/>
        <result column="insured_info" property="insuredInfo"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, order_no, user_id, product_id, status, conclusion, 
        reject_reason, underwriter, underwriting_time, insured_info, 
        create_time, update_time
    </sql>

    <!-- 自定义查询：根据用户ID查询核保记录列表 -->
    <select id="selectByUserId" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Column_List"/>
        FROM
            t_underwriting
        WHERE
            user_id = #{userId}
        ORDER BY
            create_time DESC
    </select>

    <!-- 自定义查询：查询待处理的核保记录 -->
    <select id="selectPendingUnderwritings" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Column_List"/>
        FROM
            t_underwriting
        WHERE
            status IN (0, 3)  -- 待核保或人工复核中
        ORDER BY
            create_time ASC
    </select>

    <!-- 自定义更新：批量更新核保状态 -->
    <update id="batchUpdateStatus">
        UPDATE
            t_underwriting
        SET
            status = #{newStatus},
            update_time = NOW()
        WHERE
            id IN
            <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
                #{item}
            </foreach>
    </update>
</mapper>